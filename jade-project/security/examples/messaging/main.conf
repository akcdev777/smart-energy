# ---- JADE configuration ----

# ------ Platform name------
name=myplatform

# ------ Services  ------
services=\
jade.core.security.SecurityService;\
jade.core.security.signature.SignatureService;\
jade.core.security.encryption.EncryptionService;\
jade.core.security.permission.PermissionService;\
jade.core.event.NotificationService


# ------ Agents  ------
gui=true
agents=sender:messaging.SecureSenderAgent

# ------ Transport ------
nomtp=true 


# ------ Security configuration ------

# ---- Authentication ----
# Permission Policy file
java.security.policy=C:/develop/ws1/jade/add-ons/security/examples/messaging/policy.txt


# ---- Authentication ----
# How to get owner username and password. Possible values: 
# - Cmdline --> username and passord are specified via the owner=user:passwd option
# - Text    --> user is prompted to insert username and password via standard input (Does not work well when launching through 'ant')
# - Dialog  --> user is prompted to insert username and password via a DialogBox
jade.security.authentication.logincallback=Cmdline
owner=alice:alice

# How to check username and password. Username and passwords are always checked on the Main Container --> Meaningless to specify such options on peripheral containers
# Possible values:
# - Simple --> Valid usernames and associated passwords are kept in a plain text file specified by means of the jade.security.authentication.loginsimplecredfile option
# - Unix   --> Unix based authentication
# - NT     --> NT based authentication
# - Kerberos --> Kerberos authentication 
jade.security.authentication.loginmodule=Simple
jade.security.authentication.loginsimplecredfile=passwords.txt

# - JAAS configuration file: Specifies the classes responsible to implement the possible login modules
java.security.auth.login.config=jaas.conf 

# ---- end JADE configuration ----